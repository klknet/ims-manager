{"version":3,"sources":["config/menu-config.js","component/nav-menu.js","config/settings.js","utils/request.js","pages/user/user.js","pages/user/detail.js","pages/msg/msg.js","pages/login/login.js","component/ims-routes.js","App.js","serviceWorker.js","index.js","asserts/logo.svg"],"names":["MenuSettings","type","link","name","icon","subs","SubMenu","Menu","NavMenu","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","subMenus","i","push","state","current","open","curUrl","window","location","pathname","setState","indexOf","item","key","selectedKeys","keys","react_default","a","createElement","es_menu","theme","mode","defaultSelectedKeys","onSelect","handleSelectedKey","bind","onOpenChange","handleOpenChanged","openKeys","toConsumableArray","recMenu","datasource","comp","map","menu","Item","Link","to","title","Component","settings","instance","axios","create","defaults","timeout","config","baseURL","headers","common","localStorage","User","data","pagination","total","pageSize","onChange","changePage","assertThisInitialized","pageNum","_this2","url","get","then","res","totalElements","content","columns","dataIndex","render","text","avatar","size","src","badge","status","moment","format","record","path","breadcrumb","style","margin","table","dataSource","rowKey","FormItem","Form","UserDetail","nickname","city","cellphone","imgUrl","assign","e","preventDefault","console","log","post","JSON","stringify","formItemLayout","labelCol","span","wrapperCol","es_form","onSubmit","submit","label","input","defaultValue","offset","es_button","htmlType","Msg","NormalLoginForm","handleSubmit","form","validateFields","err","values","objectSpread","token","login","catch","error","callback","getFieldDecorator","className","login_FormItem","logo","display","rules","required","message","prefix","color","placeholder","valuePropName","initialValue","es_checkbox","href","React","WrappedNormalLoginForm","ReactDOM","document","getElementById","Dashboard","Relationship","ImsRoutes","Switch","Route","exact","component","Redirect","Header","Layout","Content","Footer","Sider","App","BrowserRouter","App_Index","login_login","Index","layout","width","minHeight","nav_menu","background","padding","ims_routes","Boolean","hostname","match","src_App_0","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"6YA+CeA,EA9CM,CACjB,CACIC,KAAM,EACNC,KAAM,qBACNC,KAAM,YACNC,KAAM,OACNC,KAAM,CACF,CACIJ,KAAM,EACNE,KAAM,eACND,KAAM,6BAIlB,CACID,KAAM,EACNG,KAAM,OACND,KAAM,eACND,KAAM,gBACNG,KAAM,CACF,CACIJ,KAAM,EACNE,KAAM,2BACND,KAAM,6BAEV,CACID,KAAM,EACNE,KAAM,2BACND,KAAM,gCAIlB,CACID,KAAM,EACNG,KAAM,UACND,KAAM,eACND,KAAM,eACNG,KAAM,CACF,CACIJ,KAAM,EACNE,KAAM,2BACND,KAAM,wDCrChBI,EAAUC,IAAKD,QAsFNE,kBAnFX,SAAAA,EAAYC,GAAO,IAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,GACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,IACN,IAAIQ,EAAW,GACf,IAAI,IAAIC,KAAKlB,EACmB,IAAzBA,EAAakB,GAAGjB,MACfgB,EAASE,KAAKnB,EAAakB,GAAGhB,MALvB,OAQfQ,EAAKU,MAAQ,CACTC,QAAS,GACTC,KAAK,GACLL,SAAUA,GAXCP,mFAgBf,IAAIa,EAASC,OAAOC,SAASC,SAI7B,IAAI,IAAIR,KAHRL,KAAKc,SAAS,CACVN,QAASE,IAEAV,KAAKO,MAAMH,SACpB,GAAGM,EAAOK,QAAQf,KAAKO,MAAMH,SAASC,KAAO,EAAE,CAC3C,IAAII,EAAOT,KAAKO,MAAME,KACtBA,EAAKH,KAAKN,KAAKO,MAAMH,SAASC,IAC9BL,KAAKc,SAAS,CAACL,oDAKTO,EAAMC,EAAKC,GACzBlB,KAAKc,SAAS,CACVN,QAASQ,EAAKC,gDAIJE,GACdnB,KAAKc,SAAS,CACVL,KAAKU,qCAKT,OACIC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,MAAO,OAAQC,KAAK,SAEpBC,oBAAqB,CAAC,2BAEtBR,aAAc,CAAClB,KAAKO,MAAMC,SAC1BmB,SAAU3B,KAAK4B,kBAAkBC,KAAK7B,MACtC8B,aAAc9B,KAAK+B,kBAAkBF,KAAK7B,MAC1CgC,SAAQlC,OAAAmC,EAAA,EAAAnC,CAAME,KAAKO,MAAME,OAQ3C,SAASyB,EAAQC,EAAYC,GACzB,OAAOD,EAAWE,IAAI,SAACC,EAAMjC,GACzB,OAAkB,IAAdiC,EAAKlD,KAEDgC,EAAAC,EAAAC,cAACC,EAAA,EAAKgB,KAAN,CAAWtB,IAAKqB,EAAKjD,MACjB+B,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAMC,GAAIH,EAAKjD,MAAM+B,EAAAC,EAAAC,cAAC/B,EAAA,EAAD,CAAMH,KAAMkD,EAAK/C,OAAO6B,EAAAC,EAAAC,cAAA,YAAOgB,EAAKhD,QAE5C,IAAdgD,EAAKlD,KAERgC,EAAAC,EAAAC,cAAC7B,EAAD,CAASwB,IAAKqB,EAAKjD,KAAMqD,MAAOtB,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAC/B,EAAA,EAAD,CAAMH,KAAMkD,EAAK/C,OAAO6B,EAAAC,EAAAC,cAAA,YAAOgB,EAAKhD,QACrE4C,EAAQI,EAAK9C,KAAM4C,IAKxBhB,EAAAC,EAAAC,cAACC,EAAA,EAAKgB,KAAN,CAAWtB,IAAKqB,EAAKjD,MACjB+B,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAMC,GAAIH,EAAKjD,MACX+B,EAAAC,EAAAC,cAAA,YAAOgB,EAAKhD,UAvBnB4C,CAAQ/C,EAAca,cArDjB2C,mFCPPC,EAEH,2BAFGA,EAGJ,ICALC,SAAWC,EAAMC,SACvBF,EAASG,SAASC,QAAWC,EAC7BL,EAASG,SAASG,QAAUD,EAC5BL,EAASG,SAASI,QAAQC,OAA1B,cAAoD1C,OAAO2C,aAAP,cAErCT,QCwGAU,cAvGb,SAAAA,EAAY3D,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAuD,IACjB1D,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAyD,GAAApD,KAAAH,KAAMJ,KACDW,MAAQ,CACXiD,KAAM,GACNC,WAAY,CACVC,MAAO,EACPlD,QAAS,EACTmD,SAAU,GACVC,SAAU/D,EAAKgE,WAAWhC,KAAhB/B,OAAAgE,EAAA,EAAAhE,QAAAgE,EAAA,EAAAhE,CAAAD,OARGA,0EAaRkE,GAAS,IAAAC,EAAAhE,KACdiE,EAAM,8BAAgCF,EAAU,SAAW/D,KAAKO,MAAMkD,WAAWE,SACrFb,EAAMoB,IAAID,GAAKE,KAAK,SAACC,GACnB,IAAIZ,EAAOY,EAAIZ,KACTC,EAAaO,EAAKzD,MAAMkD,WAC9BA,EAAWC,MAAQF,EAAKa,cACxBZ,EAAWjD,QAAUuD,EACrBC,EAAKlD,SAAS,CACZ0C,KAAMA,EAAKc,QACXb,6DAMJzD,KAAK6D,WAAW7D,KAAKO,MAAMkD,WAAWjD,0CAItC,IAAM+D,EAAU,CACd,CACE7B,MAAO,eACP8B,UAAW,SACXvD,IAAK,SACLwD,OAJF,SAISC,GACL,OAAOtD,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAAQC,KAAM,GAAIC,IAAKH,MAGlC,CACEhC,MAAO,qBACP8B,UAAW,WACXvD,IAAK,YAEP,CACEyB,MAAO,eACP8B,UAAW,WACXvD,IAAK,YAEP,CACEyB,MAAO,qBACP8B,UAAW,YACXvD,IAAK,aAEP,CACEyB,MAAO,eACP8B,UAAW,OACXvD,IAAK,QAEP,CACEyB,MAAM,2BACN8B,UAAU,QACVC,OAHF,SAGSC,GACL,OAAOtD,EAAAC,EAAAC,cAAA,WAAe,WAAToD,EAAoBtD,EAAAC,EAAAC,cAACwD,EAAA,EAAD,CAAOC,OAAO,aAAaL,KAAK,iBAAUtD,EAAAC,EAAAC,cAACwD,EAAA,EAAD,CAAOC,OAAO,QAAQL,KAAK,oBAG1G,CACEhC,MAAO,2BACP8B,UAAW,aACXvD,IAAK,aACLwD,OAJF,SAISC,GACL,OAAOtD,EAAAC,EAAAC,cAAA,YAAO0D,EAAON,GAAMO,OAAO,uBAGtC,CACEvC,MAAO,eACPzB,IAAK,YACLwD,OAHF,SAGSC,EAAMQ,GACX,IAAIC,EAAO,CACTtE,SAAU,mCACVN,MAAO2E,GAET,OAAQ9D,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAMC,GAAI0C,GAAV,mBAId,OACE/D,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC8D,EAAA,EAAD,CAAYC,MAAO,CAAEC,OAAQ,eAC3BlE,EAAAC,EAAAC,cAAC8D,EAAA,EAAW7C,KAAZ,qBACAnB,EAAAC,EAAAC,cAAC8D,EAAA,EAAW7C,KAAZ,kCAGFnB,EAAAC,EAAAC,cAACiE,EAAA,EAAD,CAAOhB,QAASA,EAASiB,WAAYxF,KAAKO,MAAMiD,KAAMiC,OAAO,SACtDhC,WAAYzD,KAAKO,MAAMkD,WAAYmB,KAAK,mBAjGpCjC,wCCJb+C,EAAWC,IAAKpD,KAwDPqD,cArDb,SAAAA,EAAYhG,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA4F,IACjB/F,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA8F,GAAAzF,KAAAH,KAAMJ,KACDW,MAAQ,CACXiD,KAAM,CACJqC,SAAU,GACVC,KAAM,GACNC,UAAW,GACXC,OAAQ,KAGRnG,EAAKD,MAAMgB,SAASL,QACtBV,EAAKU,MAAMiD,KAAO1D,OAAOmG,OAAOpG,EAAKU,MAAMiD,KAAM3D,EAAKD,MAAMgB,SAASL,QAXtDV,sEAcZqG,GACLA,EAAEC,iBACFC,QAAQC,IAAIrG,KAAKO,MAAMiD,MACvBV,EAAMwD,KAAK,0BAA2BC,KAAKC,UAAUxG,KAAKO,MAAMiD,wCAIhE,IAAMiD,EAAiB,CACrBC,SAAU,CAAEC,KAAM,GAClBC,WAAY,CAAED,KAAM,IAKtB,OACEvF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACuF,EAAA,EAAD,CAAMC,SAAU9G,KAAK+G,OAAOlF,KAAK7B,OAC/BoB,EAAAC,EAAAC,cAACoE,EAAD5F,OAAAmG,OAAA,CAAUe,MAAO,gBAAUP,GACzBrF,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAAQC,KAAM,GAAIC,IAAK7E,KAAKO,MAAMiD,KAAKwC,UAEzC5E,EAAAC,EAAAC,cAACoE,EAAD5F,OAAAmG,OAAA,CAAUe,MAAO,gBAAUP,GACzBrF,EAAAC,EAAAC,cAAC2F,EAAA,EAAD,CAAOC,aAAclH,KAAKO,MAAMiD,KAAKqC,YAEvCzE,EAAAC,EAAAC,cAACoE,EAAD5F,OAAAmG,OAAA,CAAUe,MAAO,sBAAWP,GAC1BrF,EAAAC,EAAAC,cAAC2F,EAAA,EAAD,CAAOC,aAAclH,KAAKO,MAAMiD,KAAKuC,aAEvC3E,EAAAC,EAAAC,cAACoE,EAAD5F,OAAAmG,OAAA,CAAUe,MAAO,gBAAUP,GACzBrF,EAAAC,EAAAC,cAAC2F,EAAA,EAAD,CAAOC,aAAclH,KAAKO,MAAMiD,KAAKsC,QAEvC1E,EAAAC,EAAAC,cAACoE,EAlBkB,CACvBkB,WAAY,CAAED,KAAM,EAAGQ,OAAQ,IAkBzB/F,EAAAC,EAAAC,cAAC8F,EAAA,EAAD,CAAQhI,KAAK,UAAUiI,SAAU,UAAjC,0BA7Ca1E,aCyFV2E,cAxFb,SAAAA,EAAY1H,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAsH,IACjBzH,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAwH,GAAAnH,KAAAH,KAAMJ,KACDW,MAAQ,CACXiD,KAAM,GACNC,WAAY,CACVC,MAAO,EACPlD,QAAS,EACTmD,SAAU,GACVC,SAAU/D,EAAKgE,WAAWhC,KAAhB/B,OAAAgE,EAAA,EAAAhE,QAAAgE,EAAA,EAAAhE,CAAAD,OARGA,0EAaRkE,GAAS,IAAAC,EAAAhE,KACdiE,EAAM,4BAA8BF,EAAU,SAAW/D,KAAKO,MAAMkD,WAAWE,SACnFb,EAAMoB,IAAID,GAAKE,KAAK,SAACC,GACnB,IAAIZ,EAAOY,EAAIZ,KACTC,EAAaO,EAAKzD,MAAMkD,WAC9BA,EAAWC,MAAQF,EAAKa,cACxBZ,EAAWjD,QAAUuD,EACrBC,EAAKlD,SAAS,CACZ0C,KAAMA,EAAKc,QACXb,6DAMJzD,KAAK6D,WAAW7D,KAAKO,MAAMkD,WAAWjD,0CAItC,IAAM+D,EAAU,CACd,CACE7B,MAAO,qBACP8B,UAAW,SACXvD,IAAK,UAEP,CACEyB,MAAO,qBACP8B,UAAW,SACXvD,IAAK,YAEP,CACEyB,MAAM,eACN8B,UAAU,UACVvD,IAAI,WAEN,CACEyB,MAAO,2BACP8B,UAAW,KACXvD,IAAK,KACLwD,OAJF,SAISC,GACL,OAAOtD,EAAAC,EAAAC,cAAA,YAAO0D,EAAON,GAAMO,OAAO,uBAGtC,CACEvC,MAAO,2BACP8B,UAAW,UACXvD,IAAK,WAEP,CACEyB,MAAO,eACPzB,IAAK,YACLwD,OAHF,SAGSC,EAAMQ,GACX,IAAIC,EAAO,CACTtE,SAAU,8BACVN,MAAO2E,GAET,OAAQ9D,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAMC,GAAI0C,GAAV,mBAId,OACE/D,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC8D,EAAA,EAAD,CAAYC,MAAO,CAAEC,OAAQ,eAC3BlE,EAAAC,EAAAC,cAAC8D,EAAA,EAAW7C,KAAZ,qBACAnB,EAAAC,EAAAC,cAAC8D,EAAA,EAAW7C,KAAZ,kCAGFnB,EAAAC,EAAAC,cAACiE,EAAA,EAAD,CAAOhB,QAASA,EAASiB,WAAYxF,KAAKO,MAAMiD,KAAMiC,OAAO,QACtDhC,WAAYzD,KAAKO,MAAMkD,WAAYmB,KAAK,mBAlFrCjC,+BCGZ+C,UAAWC,IAAKpD,MAEhBgF,cACJ,SAAAA,EAAY3H,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAuH,IACjB1H,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAyH,GAAApH,KAAAH,KAAMJ,KAKR4H,aAAe,SAACtB,GACdA,EAAEC,iBACFtG,EAAKD,MAAM6H,KAAKC,eAAe,SAACC,EAAKC,GAC9BD,GACH7E,EAAMwD,KAAK,aAAXxG,OAAA+H,EAAA,EAAA/H,CAAA,GAA6B8H,IAASzD,KAAK,SAAAC,GACzCgC,QAAQC,IAAIjC,EAAIZ,MAChB7C,OAAO2C,aAAP,cAAuC,UAAUc,EAAIZ,KAAKsE,MAC1DjI,EAAKkI,QACLpH,OAAOC,SAASqD,IAAM,4BACrB+D,MAAM,SAAAC,GACJA,GACD7B,QAAQC,IAAI4B,QAfpBpI,EAAKkI,MAAQ,WACXnI,EAAMsI,YAHSrI,wEAwBV,IACCsI,EAAsBnI,KAAKJ,MAAM6H,KAAjCU,kBACR,OACE/G,EAAAC,EAAAC,cAAA,OAAK8G,UAAU,mBACbhH,EAAAC,EAAAC,cAACuF,EAAA,EAAD,CAAMC,SAAU9G,KAAKwH,aAAcY,UAAU,cAC3ChH,EAAAC,EAAAC,cAAC+G,EAAD,KACEjH,EAAAC,EAAAC,cAAA,OAAK8G,UAAU,aAAavD,IAAKyD,MACjClH,EAAAC,EAAAC,cAAA,MAAI+D,MAAO,CAAEkD,QAAS,WAAtB,gBAEFnH,EAAAC,EAAAC,cAAC+G,EAAD,KACGF,EAAkB,WAAY,CAC7BK,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,iCADpCP,CAGC/G,EAAAC,EAAAC,cAAC2F,EAAA,EAAD,CAAO0B,OAAQvH,EAAAC,EAAAC,cAAC/B,EAAA,EAAD,CAAMH,KAAK,OAAOiG,MAAO,CAAEuD,MAAO,qBAAwBC,YAAY,eAGzFzH,EAAAC,EAAAC,cAAC+G,EAAD,KACGF,EAAkB,WAAY,CAC7BK,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,iCADpCP,CAGC/G,EAAAC,EAAAC,cAAC2F,EAAA,EAAD,CAAO0B,OAAQvH,EAAAC,EAAAC,cAAC/B,EAAA,EAAD,CAAMH,KAAK,OAAOiG,MAAO,CAAEuD,MAAO,qBAAwBxJ,KAAK,WACvEyJ,YAAY,eAGvBzH,EAAAC,EAAAC,cAAC+G,EAAD,KACGF,EAAkB,WAAY,CAC7BW,cAAe,UACfC,cAAc,GAFfZ,CAIC/G,EAAAC,EAAAC,cAAC0H,EAAA,EAAD,qBAEF5H,EAAAC,EAAAC,cAAA,KAAG8G,UAAU,oBAAoBa,KAAK,IAAtC,mBACA7H,EAAAC,EAAAC,cAAC8F,EAAA,EAAD,CAAQhI,KAAK,UAAUiI,SAAS,SAASe,UAAU,qBAAnD,UARF,MAWKhH,EAAAC,EAAAC,cAAA,KAAG2H,KAAK,IAAR,2BA5DeC,IAAMvG,WAoE9BwG,EAAyBxD,IAAK5C,QAAL4C,CAAc4B,GAE7C6B,IAAS3E,OAAOrD,EAAAC,EAAAC,cAAC6H,EAAD,MAA4BE,SAASC,eAAe,SACrDH,QC3ETI,mLAEF,OACEnI,EAAAC,EAAAC,cAAA,+BAHkBqB,aAQlB6G,mLAEF,OACEpI,EAAAC,EAAAC,cAAA,kCAHqBqB,aAyBZ8G,mLAfX,OACErI,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACoI,EAAA,EAAD,KACEtI,EAAAC,EAAAC,cAACqI,EAAA,EAAD,CAAOC,OAAK,EAACzE,KAAK,0BAA0B0E,UAAWN,IACvDnI,EAAAC,EAAAC,cAACqI,EAAA,EAAD,CAAOC,OAAK,EAACzE,KAAK,4BAA4B0E,UAAWtG,IACzDnC,EAAAC,EAAAC,cAACqI,EAAA,EAAD,CAAOxE,KAAK,mCAAmC0E,UAAWjE,IAC1DxE,EAAAC,EAAAC,cAACqI,EAAA,EAAD,CAAOxE,KAAK,6BAA6B0E,UAAWL,IACpDpI,EAAAC,EAAAC,cAACqI,EAAA,EAAD,CAAOxE,KAAK,0BAA0B0E,UAAWvC,IACjDlG,EAAAC,EAAAC,cAACwI,EAAA,EAAD,CAAUrH,GAAG,qCAVGE,aCbhBoH,EAAmCC,IAAnCD,OAAQE,GAA2BD,IAA3BC,QAASC,GAAkBF,IAAlBE,OAAQC,GAAUH,IAAVG,MAE3BC,eACJ,SAAAA,EAAYxK,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAoK,IACjBvK,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAsK,GAAAjK,KAAAH,KAAMJ,KACDW,MAAQ,CACXwH,OAAO,GAHQlI,oFAQjBG,KAAKc,SAAS,CACZiH,OAAO,uCAKT3B,QAAQC,IAAI,YACZrG,KAAKc,SAAW,CACdiH,OAAO,oCAGF,IAAA/D,EAAAhE,KAEP,OADAoG,QAAQC,IAAIrG,KAAKO,MAAMwH,OACnB/H,KAAKO,MAAMwH,MAab3G,EAAAC,EAAAC,cAAC+I,EAAA,EAAD,KACEjJ,EAAAC,EAAAC,cAACgJ,GAAD,OAZAlJ,EAAAC,EAAAC,cAAC+I,EAAA,EAAD,KACEjJ,EAAAC,EAAAC,cAACoI,EAAA,EAAD,KACEtI,EAAAC,EAAAC,cAACqI,EAAA,EAAD,CAAOxE,KAAM,iBAAkB0E,UAC7B,SAAAjK,GACE,OAAOwB,EAAAC,EAAAC,cAACiJ,EAAD,CAAiBrC,SAAUlE,EAAKkE,SAASrG,KAAKmC,QAEzD5C,EAAAC,EAAAC,cAACwI,EAAA,EAAD,CAAUrH,GAAI,4BA9BRE,aA0CZ6H,oLAEF,OACEpJ,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACmJ,EAAA,EAAD,KACErJ,EAAAC,EAAAC,cAAC6I,GAAD,CAAOO,MAAO,IAAKrF,MAAO,CAAEsF,UAAW,UACrCvJ,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAK8G,UAAU,OAAOvD,IAAKyD,MAC3BlH,EAAAC,EAAAC,cAAA,MAAI+D,MAAO,CAAEuD,MAAO,OAAQL,QAAS,WAArC,gBAEFnH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACsJ,EAAD,QAGJxJ,EAAAC,EAAAC,cAACmJ,EAAA,EAAD,KACErJ,EAAAC,EAAAC,cAACyI,EAAD,CAAQ1E,MAAO,CAAEwF,WAAY,SAA7B,UACAzJ,EAAAC,EAAAC,cAAC2I,GAAD,CAAS5E,MAAO,CAAEwF,WAAY,OAAQvF,OAAQ,YAAawF,QAAS,cAClE1J,EAAAC,EAAAC,cAACyJ,EAAD,OAEF3J,EAAAC,EAAAC,cAAC4I,GAAD,yBAnBQvH,aA4BLyH,MCtEKY,QACW,cAA7BrK,OAAOC,SAASqK,UAEe,UAA7BtK,OAAOC,SAASqK,UAEhBtK,OAAOC,SAASqK,SAASC,MACvB,2DCZN9B,IAAS3E,OAAOrD,EAAAC,EAAAC,cAAC6J,GAAD,MAAS9B,SAASC,eAAe,SD2H3C,kBAAmB8B,WACrBA,UAAUC,cAAcC,MAAMnH,KAAK,SAAAoH,GACjCA,EAAaC,mCEnInBC,EAAAC,QAAiBC,EAAAC,EAAuB","file":"static/js/main.5a59db3e.chunk.js","sourcesContent":["// type 1-分组 2-叶子节点\r\nconst MenuSettings = [\r\n    {\r\n        type: 1,\r\n        link: '/console/dashboard',\r\n        name: 'DashBoard',\r\n        icon: 'home',\r\n        subs: [\r\n            {\r\n                type: 2,\r\n                name: '主页',\r\n                link: '/console/dashboard/home'\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        type: 1,\r\n        icon: 'user',\r\n        name: '用户',\r\n        link: '/console/user',\r\n        subs: [\r\n            {\r\n                type: 2,\r\n                name: '用户管理',\r\n                link: '/console/user/userManager',\r\n            },\r\n            {\r\n                type: 2,\r\n                name: '好友关系',\r\n                link: '/console/user/relationship',\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        type: 1,\r\n        icon: 'message',\r\n        name: '消息',\r\n        link: '/console/msg',\r\n        subs: [\r\n            {\r\n                type: 2,\r\n                name: '消息管理',\r\n                link: '/console/msg/msgManager',\r\n            },\r\n        ],\r\n    },\r\n];\r\nexport default MenuSettings;\r\n","import MenuSettings from '../config/menu-config';\r\nimport React, {Component} from 'react';\r\nimport {Icon, Menu} from 'antd';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst SubMenu = Menu.SubMenu\r\n\r\nclass NavMenu extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        let subMenus = []\r\n        for(let i in MenuSettings) {\r\n            if(MenuSettings[i].type === 1) {\r\n                subMenus.push(MenuSettings[i].link);\r\n            }\r\n        }\r\n        this.state = {\r\n            current: '',\r\n            open:[],\r\n            subMenus: subMenus\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let curUrl = window.location.pathname;\r\n        this.setState({\r\n            current: curUrl\r\n        })\r\n        for(let i in this.state.subMenus){\r\n            if(curUrl.indexOf(this.state.subMenus[i]) >= 0){\r\n                let open = this.state.open\r\n                open.push(this.state.subMenus[i]);\r\n                this.setState({open,})\r\n            }\r\n        }\r\n    }\r\n\r\n    handleSelectedKey(item, key, selectedKeys) {\r\n        this.setState({\r\n            current: item.key,\r\n        })\r\n    }\r\n\r\n    handleOpenChanged(keys) {\r\n        this.setState({\r\n            open:keys\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Menu theme={'dark'} mode=\"inline\"\r\n                  // style={{width: 256}}\r\n                  defaultSelectedKeys={['/console/dashboard/home']}\r\n                  // defaultOpenKeys={['/console/dashboard']}\r\n                  selectedKeys={[this.state.current]}\r\n                  onSelect={this.handleSelectedKey.bind(this)}\r\n                  onOpenChange={this.handleOpenChanged.bind(this)}\r\n                  openKeys={[...this.state.open]}\r\n            >\r\n                {recMenu(MenuSettings, this)}\r\n            </Menu>\r\n        );\r\n    }\r\n}\r\n\r\nfunction recMenu(datasource, comp) {\r\n    return datasource.map((menu, i) => {\r\n        if (menu.type === 0) {\r\n            return (\r\n                <Menu.Item key={menu.link}>\r\n                    <Link to={menu.link}><Icon type={menu.icon}/><span>{menu.name}</span></Link>\r\n                </Menu.Item>);\r\n        } else if (menu.type === 1) {\r\n            return (\r\n                <SubMenu key={menu.link} title={<span><Icon type={menu.icon}/><span>{menu.name}</span></span>}>\r\n                    {recMenu(menu.subs, comp)}\r\n                </SubMenu>\r\n            )\r\n        } else {\r\n            return (\r\n                <Menu.Item key={menu.link}>\r\n                    <Link to={menu.link}>\r\n                        <span>{menu.name}</span>\r\n                    </Link>\r\n                </Menu.Item>\r\n            )\r\n        }\r\n    })\r\n}\r\n\r\nexport default NavMenu\r\n\r\n\r\n","export default {\r\n  // baseURL: 'http://127.0.0.1/ims',\r\n  \"baseURL\":\"http://39.106.133.40/ims\",\r\n  timeout: 3000,\r\n};\r\n","import axios from 'axios'\r\nimport config from '../config/settings'\r\n\r\nconst instance = axios.create()\r\ninstance.defaults.timeout =  config.timeout\r\ninstance.defaults.baseURL = config.baseURL\r\ninstance.defaults.headers.common['Authorization'] = window.localStorage['authorization']\r\n\r\nexport default instance\r\n\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Avatar, Breadcrumb, Table, Badge } from 'antd';\r\nimport './user.css';\r\nimport * as moment from 'moment';\r\nimport axios from '../../utils/request';\r\n\r\n\r\nclass User extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      pagination: {\r\n        total: 0,\r\n        current: 1,\r\n        pageSize: 10,\r\n        onChange: this.changePage.bind(this),\r\n      },\r\n    };\r\n  }\r\n\r\n  changePage(pageNum) {\r\n    let url = 'manager/user/listUser?page=' + pageNum + '&size=' + this.state.pagination.pageSize;\r\n    axios.get(url).then((res) => {\r\n      let data = res.data\r\n      const pagination = this.state.pagination;\r\n      pagination.total = data.totalElements;\r\n      pagination.current = pageNum;\r\n      this.setState({\r\n        data: data.content,\r\n        pagination,\r\n      });\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.changePage(this.state.pagination.current);\r\n  }\r\n\r\n  render() {\r\n    const columns = [\r\n      {\r\n        title: '头像',\r\n        dataIndex: 'imgUrl',\r\n        key: 'imgUrl',\r\n        render(text) {\r\n          return <Avatar size={48} src={text}/>;\r\n        },\r\n      },\r\n      {\r\n        title: '用户名',\r\n        dataIndex: 'username',\r\n        key: 'username',\r\n      },\r\n      {\r\n        title: '昵称',\r\n        dataIndex: 'nickname',\r\n        key: 'nickname',\r\n      },\r\n      {\r\n        title: '手机号',\r\n        dataIndex: 'cellphone',\r\n        key: 'cellphone',\r\n      },\r\n      {\r\n        title: '城市',\r\n        dataIndex: 'city',\r\n        key: 'city',\r\n      },\r\n      {\r\n        title:'在线状态',\r\n        dataIndex:'state',\r\n        render(text){\r\n          return <div>{text === 'ONLINE' ? <Badge status=\"processing\" text=\"在线\" /> : <Badge status=\"error\" text=\"离线\" />}</div>\r\n        }\r\n      },\r\n      {\r\n        title: '注册时间',\r\n        dataIndex: 'createtime',\r\n        key: 'createtime',\r\n        render(text) {\r\n          return <span>{moment(text).format('YYYY-MM-DD HH:mm')}</span>\r\n        }\r\n      },\r\n      {\r\n        title: '操作',\r\n        key: 'operation',\r\n        render(text, record) {\r\n          let path = {\r\n            pathname: '/console/user/userManager/detail',\r\n            state: record,\r\n          };\r\n          return (<Link to={path}>编辑</Link>);\r\n        },\r\n      },\r\n    ];\r\n    return (\r\n      <div>\r\n        <Breadcrumb style={{ margin: '0 0 16px 0' }}>\r\n          <Breadcrumb.Item>用户</Breadcrumb.Item>\r\n          <Breadcrumb.Item>用户管理</Breadcrumb.Item>\r\n        </Breadcrumb>\r\n\r\n        <Table columns={columns} dataSource={this.state.data} rowKey=\"userId\"\r\n               pagination={this.state.pagination} size=\"middle\"/>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default User;","import React, {Component} from 'react';\r\nimport {Avatar, Button, Form, Input} from 'antd';\r\nimport axios from '../../utils/request'\r\n\r\nconst FormItem = Form.Item;\r\n\r\nclass UserDetail extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: {\r\n        nickname: '',\r\n        city: '',\r\n        cellphone: '',\r\n        imgUrl: '',\r\n      },\r\n    };\r\n    if (this.props.location.state)\r\n      this.state.data = Object.assign(this.state.data, this.props.location.state);\r\n  }\r\n\r\n  submit(e) {\r\n    e.preventDefault();\r\n    console.log(this.state.data);\r\n    axios.post(\"manager/user/userUpdate\", JSON.stringify(this.state.data))\r\n  }\r\n\r\n  render() {\r\n    const formItemLayout = {\r\n      labelCol: { span: 2 },\r\n      wrapperCol: { span: 8 },\r\n    };\r\n    const buttonItemLayout = {\r\n      wrapperCol: { span: 8, offset: 2 },\r\n    };\r\n    return (\r\n      <div>\r\n        <Form onSubmit={this.submit.bind(this)}>\r\n          <FormItem label={'头像'} {...formItemLayout}>\r\n            <Avatar size={64} src={this.state.data.imgUrl}/>\r\n          </FormItem>\r\n          <FormItem label={'昵称'} {...formItemLayout}>\r\n            <Input defaultValue={this.state.data.nickname}/>\r\n          </FormItem>\r\n          <FormItem label={'手机号'} {...formItemLayout}>\r\n            <Input defaultValue={this.state.data.cellphone}/>\r\n          </FormItem>\r\n          <FormItem label={'城市'} {...formItemLayout}>\r\n            <Input defaultValue={this.state.data.city}/>\r\n          </FormItem>\r\n          <FormItem {...buttonItemLayout} >\r\n            <Button type=\"primary\" htmlType={'submit'}>修改</Button>\r\n          </FormItem>\r\n        </Form>\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserDetail;","import React, {Component} from 'react';\r\nimport axios from '../../utils/request';\r\nimport {Breadcrumb, Table} from 'antd';\r\nimport {Link} from 'react-router-dom';\r\nimport * as moment from 'moment';\r\n\r\nclass Msg extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      pagination: {\r\n        total: 0,\r\n        current: 1,\r\n        pageSize: 10,\r\n        onChange: this.changePage.bind(this),\r\n      },\r\n    };\r\n  }\r\n\r\n  changePage(pageNum) {\r\n    let url = 'manager/msg/listMsg?page=' + pageNum + '&size=' + this.state.pagination.pageSize;\r\n    axios.get(url).then((res) => {\r\n      let data = res.data\r\n      const pagination = this.state.pagination;\r\n      pagination.total = data.totalElements;\r\n      pagination.current = pageNum;\r\n      this.setState({\r\n        data: data.content,\r\n        pagination,\r\n      });\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.changePage(this.state.pagination.current);\r\n  }\r\n\r\n  render() {\r\n    const columns = [\r\n      {\r\n        title: '发送人',\r\n        dataIndex: 'sendId',\r\n        key: 'sender',\r\n      },\r\n      {\r\n        title: '接受人',\r\n        dataIndex: 'destId',\r\n        key: 'receiver',\r\n      },\r\n      {\r\n        title:'内容',\r\n        dataIndex:'content',\r\n        key:'content',\r\n      },\r\n      {\r\n        title: '发送时间',\r\n        dataIndex: 'ts',\r\n        key: 'ts',\r\n        render(text) {\r\n          return <span>{moment(text).format('YYYY-MM-DD HH:mm')}</span>\r\n        }\r\n      },\r\n      {\r\n        title: '消息类型',\r\n        dataIndex: 'msgType',\r\n        key: 'msgType',\r\n      },\r\n      {\r\n        title: '操作',\r\n        key: 'operation',\r\n        render(text, record) {\r\n          let path = {\r\n            pathname: '/console/listManager/detail',\r\n            state: record,\r\n          };\r\n          return (<Link to={path}>编辑</Link>);\r\n        },\r\n      },\r\n    ];\r\n    return (\r\n      <div>\r\n        <Breadcrumb style={{ margin: '0 0 16px 0' }}>\r\n          <Breadcrumb.Item>消息</Breadcrumb.Item>\r\n          <Breadcrumb.Item>消息管理</Breadcrumb.Item>\r\n        </Breadcrumb>\r\n\r\n        <Table columns={columns} dataSource={this.state.data} rowKey=\"msgId\"\r\n               pagination={this.state.pagination} size=\"middle\"/>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Msg","import { Form, Icon, Input, Button, Checkbox } from 'antd';\r\nimport React, { Component } from 'react';\r\nimport './login.css'\r\nimport logo from '../../asserts/logo.svg';\r\n\r\nimport axios from '../../utils/request'\r\nimport ReactDOM from 'react-dom';\r\nimport App from '../../App';\r\n\r\nconst FormItem = Form.Item;\r\n\r\nclass NormalLoginForm extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.login = ()=>{\r\n      props.callback()\r\n    }\r\n  }\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        axios.post(\"auth/login\", {...values}).then(res=>{\r\n          console.log(res.data)\r\n          window.localStorage['authorization'] = 'Bearer '+res.data.token\r\n          this.login()\r\n          window.location.url = '/console/dashboard/home'\r\n        }).catch(error=>{\r\n          if(error)\r\n            console.log(error)\r\n        })\r\n      }\r\n    });\r\n\r\n  };\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    return (\r\n      <div className=\"login-container\">\r\n        <Form onSubmit={this.handleSubmit} className=\"login-form\">\r\n          <FormItem>\r\n            <img className='login-logo' src={logo}/>\r\n            <h1 style={{ display: 'inline' }}>Ims Manager</h1>\r\n          </FormItem>\r\n          <FormItem>\r\n            {getFieldDecorator('username', {\r\n              rules: [{ required: true, message: 'Please input your username!' }],\r\n            })(\r\n              <Input prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }}/>} placeholder=\"Username\"/>,\r\n            )}\r\n          </FormItem>\r\n          <FormItem>\r\n            {getFieldDecorator('password', {\r\n              rules: [{ required: true, message: 'Please input your Password!' }],\r\n            })(\r\n              <Input prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }}/>} type=\"password\"\r\n                     placeholder=\"Password\"/>,\r\n            )}\r\n          </FormItem>\r\n          <FormItem>\r\n            {getFieldDecorator('remember', {\r\n              valuePropName: 'checked',\r\n              initialValue: true,\r\n            })(\r\n              <Checkbox>Remember me</Checkbox>,\r\n            )}\r\n            <a className=\"login-form-forgot\" href=\"\">Forgot password</a>\r\n            <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n              Log in\r\n            </Button>\r\n            Or <a href=\"\">register now!</a>\r\n          </FormItem>\r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst WrappedNormalLoginForm = Form.create()(NormalLoginForm);\r\n\r\nReactDOM.render(<WrappedNormalLoginForm />, document.getElementById('root'));\r\nexport default WrappedNormalLoginForm;","import React, { Component } from 'react';\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\nimport User from '../pages/user/user';\r\nimport UserDetail from '../pages/user/detail';\r\nimport Msg from '../pages/msg/msg';\r\nimport NormalLoginForm from '../pages/login/login';\r\n\r\nclass Dashboard extends Component {\r\n  render() {\r\n    return (\r\n      <div>Dashboard</div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Relationship extends Component {\r\n  render() {\r\n    return (\r\n      <div>Relationship</div>\r\n    );\r\n  }\r\n}\r\n\r\nclass ImsRoutes extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n      <Switch>\r\n        <Route exact path='/console/dashboard/home' component={Dashboard}/>\r\n        <Route exact path='/console/user/userManager' component={User}/>\r\n        <Route path='/console/user/userManager/detail' component={UserDetail}/>\r\n        <Route path='/console/user/relationship' component={Relationship}/>\r\n        <Route path='/console/msg/msgManager' component={Msg}/>\r\n        <Redirect to='/console/dashboard/home'/>\r\n      </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ImsRoutes;\r\n\r\n","import React, {Component} from 'react';\r\nimport { BrowserRouter as Router, Route, Redirect, Switch } from 'react-router-dom';\r\nimport logo from './asserts/logo.svg';\r\nimport './App.css';\r\nimport {Layout} from 'antd';\r\nimport 'antd/dist/antd.css';\r\nimport NavMenu from './component/nav-menu';\r\nimport ImsRoutes from './component/ims-routes';\r\nimport NormalLoginForm from './pages/login/login';\r\n\r\nconst { Header, Content, Footer, Sider } = Layout;\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      login: false\r\n    }\r\n  }\r\n\r\n  componentWillMount () {\r\n    this.setState({\r\n      login: true\r\n    })\r\n  }\r\n\r\n  callback () {\r\n    console.log('callback')\r\n    this.setState = {\r\n      login: true\r\n    }\r\n  }\r\n  render() {\r\n    console.log(this.state.login)\r\n    if(!this.state.login){\r\n      return (\r\n        <Router>\r\n          <Switch>\r\n            <Route path={'/console/login'} component={\r\n              props => {\r\n                return <NormalLoginForm callback={this.callback.bind(this)}/>}\r\n            }/>\r\n            <Redirect to={'/console/login'}/>\r\n          </Switch>\r\n        </Router>)\r\n    }\r\n    return (\r\n      <Router>\r\n        <Index/>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nclass Index extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Layout>\r\n          <Sider width={260} style={{ minHeight: '100vh'}}>\r\n            <div>\r\n              <img className='logo' src={logo}/>\r\n              <h2 style={{ color: '#fff', display: 'inline' }}>IMS Manager</h2>\r\n            </div>\r\n            <div>\r\n              <NavMenu/>\r\n            </div>\r\n          </Sider>\r\n          <Layout>\r\n            <Header style={{ background: '#fff' }}>Header</Header>\r\n            <Content style={{ background: '#fff', margin: '20px 16px', padding: '25px 20px' }}>\r\n              <ImsRoutes/>\r\n            </Content>\r\n            <Footer>Footer</Footer>\r\n          </Layout>\r\n        </Layout>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.b29324c4.svg\";"],"sourceRoot":""}