{"version":3,"sources":["asserts/logo.svg","config/menu-config.js","component/nav-menu.js","config/settings.js","utils/request.js","pages/user/user.js","pages/user/detail.js","pages/msg/msg.js","component/ims-routes.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","MenuSettings","type","link","name","key","icon","subs","SubMenu","Menu","NavMenu","react_default","a","createElement","es_menu","theme","mode","defaultSelectedKeys","recMenu","datasource","map","menu","i","Item","Link","to","title","Component","settings","instance","axios","create","defaults","timeout","config","baseURL","User","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","data","pagination","total","current","pageSize","onChange","changePage","bind","assertThisInitialized","pageNum","_this2","url","get","then","res","setState","list","columns","dataIndex","render","text","avatar","size","src","record","path","pathname","breadcrumb","style","margin","table","dataSource","rowKey","FormItem","Form","UserDetail","nickname","city","cellphone","imgUrl","location","assign","e","preventDefault","console","log","post","JSON","stringify","formItemLayout","labelCol","span","wrapperCol","es_form","onSubmit","submit","label","input","defaultValue","offset","es_button","htmlType","Msg","Dashboard","Relationship","ImsRoutes","Switch","Route","exact","component","Redirect","Header","Layout","Content","Footer","Sider","App","BrowserRouter","layout","minHeight","width","className","logo","color","display","nav_menu","background","padding","ims_routes","Boolean","window","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6c7a35d7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.b29324c4.svg\";","// type 0-单节点  1-分组 2-叶子节点\nconst MenuSettings = [\n  {\n    type: 0,\n    link: '/console',\n    name: '主页',\n    key: 'home',\n    icon: 'home',\n  },\n  {\n    type: 1,\n    icon: 'user',\n    name: '用户',\n    key: 'user',\n    subs: [\n      {\n        type: 2,\n        name: '用户管理',\n        key: 'userManager',\n        link: '/console/userManager',\n      },\n      {\n        type: 2,\n        name: '好友关系',\n        key: 'relationship',\n        link: '/console/relationship',\n      },\n    ],\n  },\n  {\n    type: 1,\n    icon: 'message',\n    name: '消息',\n    key: 'msg',\n    subs: [\n      {\n        type: 2,\n        name: '消息管理',\n        key: 'msgManager',\n        link: '/console/msgManager',\n      },\n    ],\n  },\n];\nexport default MenuSettings;\n","import MenuSettings from '../config/menu-config';\nimport React, { Component } from 'react';\nimport { Layout, Menu, Breadcrumb, Icon, Button } from 'antd';\nimport { Route, BrowserRouter as Router, Link, Redirect, Switch } from 'react-router-dom';\n\nconst SubMenu = Menu.SubMenu\n\nclass NavMenu extends Component {\n  render() {\n    return (\n      <Menu theme={'dark'} mode=\"inline\" defaultSelectedKeys={['home']}>\n        {recMenu(MenuSettings)}\n      </Menu>\n    );\n  }\n}\n\nfunction recMenu(datasource) {\n  return datasource.map((menu, i) => {\n    if (menu.type == 0) {\n      return (\n        <Menu.Item key={menu.key}>\n          <Link to={menu.link}><Icon type={menu.icon}/><span>{menu.name}</span></Link>\n        </Menu.Item>);\n    }else if(menu.type == 1) {\n      return (\n        <SubMenu key={menu.key} title={<span><Icon type={menu.icon}/><span>{menu.name}</span></span>}>\n          {recMenu(menu.subs)}\n        </SubMenu>\n      )\n    }else {\n      return (\n        <Menu.Item key={menu.key}>\n          <Link to={menu.link}>\n            <span>{menu.name}</span>\n          </Link>\n        </Menu.Item>\n      )\n    }\n  })\n}\n\nexport default NavMenu\n\n\n","export default {\n  // baseURL: 'http://127.0.0.1/ims',\n  \"baseURL\":\"http://39.106.133.40/ims\",\n  timeout: 3000,\n};\n","import axios from 'axios'\nimport config from '../config/settings'\n\nconst instance = axios.create()\ninstance.defaults.timeout =  config.timeout\ninstance.defaults.baseURL = config.baseURL\n\nexport default instance\n\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Avatar, Breadcrumb, Table } from 'antd';\nimport './user.css';\nimport axios from '../../utils/request';\n\nclass User extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      pagination: {\n        total: 0,\n        current: 1,\n        pageSize: 5,\n        onChange: this.changePage.bind(this),\n      },\n    };\n  }\n\n  changePage(pageNum) {\n    let params = {\n      method: 'GET',\n    };\n    let url = 'manager/user/listUser?page=' + pageNum + '&size=' + this.state.pagination.pageSize;\n    axios.get(url).then((res) => {\n      let data = res.data\n      const pagination = this.state.pagination;\n      pagination.total = data.total;\n      pagination.current = pageNum;\n      this.setState({\n        data: data.list,\n        pagination,\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.changePage(this.state.pagination.current);\n  }\n\n  render() {\n    const columns = [\n      {\n        title: '头像',\n        dataIndex: 'imgUrl',\n        key: 'imgUrl',\n        render(text) {\n          return <Avatar size={48} src={text}/>;\n        },\n      },\n      {\n        title: '用户名',\n        dataIndex: 'username',\n        key: 'username',\n      },\n      {\n        title: '昵称',\n        dataIndex: 'nickname',\n        key: 'nickname',\n      },\n      {\n        title: '手机号',\n        dataIndex: 'cellphone',\n        key: 'cellphone',\n      },\n      {\n        title: '城市',\n        dataIndex: 'city',\n        key: 'city',\n      },\n      {\n        title: '注册时间',\n        dataIndex: 'createtime',\n        key: 'createtime',\n      },\n      {\n        title: '操作',\n        key: 'operation',\n        render(text, record) {\n          let path = {\n            pathname: '/console/userManager/detail',\n            state: record,\n          };\n          return (<Link to={path}>编辑</Link>);\n        },\n      },\n    ];\n    return (\n      <div>\n        <Breadcrumb style={{ margin: '0 0 16px 0' }}>\n          <Breadcrumb.Item>用户</Breadcrumb.Item>\n          <Breadcrumb.Item>用户管理</Breadcrumb.Item>\n        </Breadcrumb>\n\n        <Table columns={columns} dataSource={this.state.data} rowKey=\"userId\"\n               pagination={this.state.pagination} size=\"middle\"/>\n\n      </div>\n    );\n  }\n}\n\nexport default User;","import { Component } from 'react';\nimport { Form, Input, Button, Avatar } from 'antd';\nimport React from 'react';\nimport config from '../../config/settings';\nimport axios from '../../utils/request'\n\nconst FormItem = Form.Item;\n\nclass UserDetail extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {\n        nickname: '',\n        city: '',\n        cellphone: '',\n        imgUrl: '',\n      },\n    };\n    if (this.props.location.state)\n      this.state.data = Object.assign(this.state.data, this.props.location.state);\n  }\n\n  submit(e) {\n    e.preventDefault();\n    console.log(this.state.data);\n    axios.post(\"manager/user/userUpdate\", JSON.stringify(this.state.data))\n  }\n\n  render() {\n    const formItemLayout = {\n      labelCol: { span: 2 },\n      wrapperCol: { span: 8 },\n    };\n    const buttonItemLayout = {\n      wrapperCol: { span: 8, offset: 2 },\n    };\n    return (\n      <div>\n        <Form onSubmit={this.submit.bind(this)}>\n          <FormItem label={'头像'} {...formItemLayout}>\n            <Avatar size={64} src={this.state.data.imgUrl}/>\n          </FormItem>\n          <FormItem label={'昵称'} {...formItemLayout}>\n            <Input defaultValue={this.state.data.nickname}/>\n          </FormItem>\n          <FormItem label={'手机号'} {...formItemLayout}>\n            <Input defaultValue={this.state.data.cellphone}/>\n          </FormItem>\n          <FormItem label={'城市'} {...formItemLayout}>\n            <Input defaultValue={this.state.data.city}/>\n          </FormItem>\n          <FormItem {...buttonItemLayout} >\n            <Button type=\"primary\" htmlType={'submit'}>修改</Button>\n          </FormItem>\n        </Form>\n      </div>\n\n    );\n  }\n}\n\nexport default UserDetail;","import React, { Component } from 'react';\nimport axios from '../../utils/request';\nimport { Avatar, Breadcrumb, Table } from 'antd';\nimport { Link } from 'react-router-dom';\n\nclass Msg extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      pagination: {\n        total: 0,\n        current: 1,\n        pageSize: 10,\n        onChange: this.changePage.bind(this),\n      },\n    };\n  }\n\n  changePage(pageNum) {\n    let params = {\n      method: 'GET',\n    };\n    let url = 'manager/msg/listMsg?page=' + pageNum + '&size=' + this.state.pagination.pageSize;\n    axios.get(url).then((res) => {\n      let data = res.data\n      const pagination = this.state.pagination;\n      pagination.total = data.total;\n      pagination.current = pageNum;\n      this.setState({\n        data: data.list,\n        pagination,\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.changePage(this.state.pagination.current);\n  }\n\n  render() {\n    const columns = [\n      {\n        title: '发送人',\n        dataIndex: 'sendId',\n        key: 'sender',\n      },\n      {\n        title: '接受人',\n        dataIndex: 'destId',\n        key: 'receiver',\n      },\n      {\n        title:'内容',\n        dataIndex:'content',\n        key:'content',\n      },\n      {\n        title: '发送时间',\n        dataIndex: 'ts',\n        key: 'ts'\n      },\n      {\n        title: '消息类型',\n        dataIndex: 'msgType',\n        key: 'msgType',\n      },\n      {\n        title: '操作',\n        key: 'operation',\n        render(text, record) {\n          let path = {\n            pathname: '/console/listManager/detail',\n            state: record,\n          };\n          return (<Link to={path}>编辑</Link>);\n        },\n      },\n    ];\n    return (\n      <div>\n        <Breadcrumb style={{ margin: '0 0 16px 0' }}>\n          <Breadcrumb.Item>消息</Breadcrumb.Item>\n          <Breadcrumb.Item>消息管理</Breadcrumb.Item>\n        </Breadcrumb>\n\n        <Table columns={columns} dataSource={this.state.data} rowKey=\"msgId\"\n               pagination={this.state.pagination} size=\"middle\"/>\n\n      </div>\n    )\n  }\n}\n\nexport default Msg","import React, { Component } from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport User from '../pages/user/user';\nimport UserDetail from '../pages/user/detail';\nimport Msg from '../pages/msg/msg';\n\nclass Dashboard extends Component {\n  render() {\n    return (\n      <div>Dashboard</div>\n    );\n  }\n}\n\nclass Relationship extends Component {\n  render() {\n    return (\n      <div>Relationship</div>\n    );\n  }\n}\n\nclass ImsRoutes extends Component {\n  render() {\n    return (\n      <Switch>\n        <Route exact path='/console' component={Dashboard}/>\n        <Route exact path='/console/userManager' component={User}/>\n        <Route path='/console/userManager/detail' component={UserDetail}/>\n        <Route path='/console/relationship' component={Relationship}/>\n        <Route path='/console/msgManager' component={Msg}/>\n        <Redirect to='/console'/>\n      </Switch>\n    );\n  }\n}\n\nexport default ImsRoutes;\n\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport logo from './asserts/logo.svg';\nimport './App.css';\nimport { Layout } from 'antd';\nimport 'antd/dist/antd.css';\nimport NavMenu from './component/nav-menu';\nimport ImsRoutes from './component/ims-routes';\n\nconst { Header, Content, Footer, Sider } = Layout;\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div>\n          <Layout>\n            <Sider style={{ minHeight: '100vh', width: 300 }}>\n              <div>\n                <img className='logo' src={logo}/>\n                <h3 style={{ color: '#fff', display: 'inline' }}>IMS Manager</h3>\n              </div>\n              <div>\n                <NavMenu/>\n              </div>\n            </Sider>\n            <Layout>\n              <Header style={{ background: '#fff' }}>Header</Header>\n\n              <Content style={{ background: '#fff', margin: '20px 16px', padding: '25px 20px' }}>\n                <ImsRoutes/>\n              </Content>\n              <Footer>Footer</Footer>\n            </Layout>\n          </Layout>\n        </div>\n      </Router>\n    );\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}