{"version":3,"sources":["asserts/logo.svg","config/menu-config.js","component/nav-menu.js","config/settings.js","utils/request.js","pages/user/user.js","pages/user/detail.js","pages/msg/msg.js","component/ims-routes.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","MenuSettings","type","link","name","icon","subs","SubMenu","Menu","NavMenu","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","subMenus","i","push","state","current","open","curUrl","window","location","pathname","setState","indexOf","item","key","selectedKeys","keys","react_default","a","createElement","es_menu","theme","mode","defaultSelectedKeys","onSelect","handleSelectedKey","bind","onOpenChange","handleOpenChanged","openKeys","toConsumableArray","recMenu","datasource","comp","map","menu","Item","Link","to","title","Component","settings","instance","axios","create","defaults","timeout","config","baseURL","User","data","pagination","total","pageSize","onChange","changePage","assertThisInitialized","pageNum","_this2","url","get","then","res","totalElements","content","columns","dataIndex","render","text","avatar","size","src","badge","status","moment","format","record","path","breadcrumb","style","margin","table","dataSource","rowKey","FormItem","Form","UserDetail","nickname","city","cellphone","imgUrl","assign","e","preventDefault","console","log","post","JSON","stringify","formItemLayout","labelCol","span","wrapperCol","es_form","onSubmit","submit","label","input","defaultValue","offset","es_button","htmlType","Msg","Dashboard","Relationship","ImsRoutes","Switch","Route","exact","component","Redirect","Header","Layout","Content","Footer","Sider","App","BrowserRouter","layout","width","minHeight","className","logo","color","display","nav_menu","background","padding","ims_routes","Boolean","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"6EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,sUC+CzBC,EA9CM,CACjB,CACIC,KAAM,EACNC,KAAM,qBACNC,KAAM,YACNC,KAAM,OACNC,KAAM,CACF,CACIJ,KAAM,EACNE,KAAM,eACND,KAAM,6BAIlB,CACID,KAAM,EACNG,KAAM,OACND,KAAM,eACND,KAAM,gBACNG,KAAM,CACF,CACIJ,KAAM,EACNE,KAAM,2BACND,KAAM,6BAEV,CACID,KAAM,EACNE,KAAM,2BACND,KAAM,gCAIlB,CACID,KAAM,EACNG,KAAM,UACND,KAAM,eACND,KAAM,eACNG,KAAM,CACF,CACIJ,KAAM,EACNE,KAAM,2BACND,KAAM,wDCrChBI,EAAUC,IAAKD,QAwFNE,kBArFX,SAAAA,EAAYC,GAAO,IAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,GACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,IACN,IAAIQ,EAAW,GACf,IAAI,IAAIC,KAAKlB,EACmB,IAAzBA,EAAakB,GAAGjB,MACfgB,EAASE,KAAKnB,EAAakB,GAAGhB,MALvB,OAQfQ,EAAKU,MAAQ,CACTC,QAAS,GACTC,KAAK,GACLL,SAAUA,GAXCP,mFAgBf,IAAIa,EAASC,OAAOC,SAASC,SAI7B,IAAI,IAAIR,KAHRL,KAAKc,SAAS,CACVN,QAASE,IAEAV,KAAKO,MAAMH,SACpB,GAAGM,EAAOK,QAAQf,KAAKO,MAAMH,SAASC,KAAO,EAAE,CAC3C,IAAII,EAAOT,KAAKO,MAAME,KACtBA,EAAKH,KAAKN,KAAKO,MAAMH,SAASC,IAC9BL,KAAKc,SAAS,CAACL,oDAKTO,EAAMC,EAAKC,GACzBlB,KAAKc,SAAS,CACVN,QAASQ,EAAKC,gDAIJE,GACdnB,KAAKc,SAAS,CACVL,KAAKU,qCAKT,OACIC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,MAAO,OAAQC,KAAK,SAEpBC,oBAAqB,CAAC,2BAEtBR,aAAc,CAAClB,KAAKO,MAAMC,SAC1BmB,SAAU3B,KAAK4B,kBAAkBC,KAAK7B,MACtC8B,aAAc9B,KAAK+B,kBAAkBF,KAAK7B,MAC1CgC,SAAQlC,OAAAmC,EAAA,EAAAnC,CAAME,KAAKO,MAAME,OAQ3C,SAASyB,EAAQC,EAAYC,GACzB,OAAOD,EAAWE,IAAI,SAACC,EAAMjC,GACzB,OAAkB,IAAdiC,EAAKlD,KAEDgC,EAAAC,EAAAC,cAACC,EAAA,EAAKgB,KAAN,CAAWtB,IAAKqB,EAAKjD,MACjB+B,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAMC,GAAIH,EAAKjD,MAAM+B,EAAAC,EAAAC,cAAC/B,EAAA,EAAD,CAAMH,KAAMkD,EAAK/C,OAAO6B,EAAAC,EAAAC,cAAA,YAAOgB,EAAKhD,QAE5C,IAAdgD,EAAKlD,KAERgC,EAAAC,EAAAC,cAAC7B,EAAD,CAASwB,IAAKqB,EAAKjD,KAAMqD,MAAOtB,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAC/B,EAAA,EAAD,CAAMH,KAAMkD,EAAK/C,OAAO6B,EAAAC,EAAAC,cAAA,YAAOgB,EAAKhD,QAGrE4C,EAAQI,EAAK9C,KAAM4C,IAKxBhB,EAAAC,EAAAC,cAACC,EAAA,EAAKgB,KAAN,CAAWtB,IAAKqB,EAAKjD,MACjB+B,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAMC,GAAIH,EAAKjD,MACX+B,EAAAC,EAAAC,cAAA,YAAOgB,EAAKhD,UAzBnB4C,CAAQ/C,EAAca,cArDjB2C,8GCPPC,EAEH,2BAFGA,EAGJ,ICALC,SAAWC,EAAMC,SACvBF,EAASG,SAASC,QAAWC,EAC7BL,EAASG,SAASG,QAAUD,EAEbL,QCwGAO,cAvGb,SAAAA,EAAYxD,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAoD,IACjBvD,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAsD,GAAAjD,KAAAH,KAAMJ,KACDW,MAAQ,CACX8C,KAAM,GACNC,WAAY,CACVC,MAAO,EACP/C,QAAS,EACTgD,SAAU,GACVC,SAAU5D,EAAK6D,WAAW7B,KAAhB/B,OAAA6D,EAAA,EAAA7D,QAAA6D,EAAA,EAAA7D,CAAAD,OARGA,0EAaR+D,GAAS,IAAAC,EAAA7D,KACd8D,EAAM,8BAAgCF,EAAU,SAAW5D,KAAKO,MAAM+C,WAAWE,SACrFV,EAAMiB,IAAID,GAAKE,KAAK,SAACC,GACnB,IAAIZ,EAAOY,EAAIZ,KACTC,EAAaO,EAAKtD,MAAM+C,WAC9BA,EAAWC,MAAQF,EAAKa,cACxBZ,EAAW9C,QAAUoD,EACrBC,EAAK/C,SAAS,CACZuC,KAAMA,EAAKc,QACXb,6DAMJtD,KAAK0D,WAAW1D,KAAKO,MAAM+C,WAAW9C,0CAItC,IAAM4D,EAAU,CACd,CACE1B,MAAO,eACP2B,UAAW,SACXpD,IAAK,SACLqD,OAJF,SAISC,GACL,OAAOnD,EAAAC,EAAAC,cAACkD,EAAA,EAAD,CAAQC,KAAM,GAAIC,IAAKH,MAGlC,CACE7B,MAAO,qBACP2B,UAAW,WACXpD,IAAK,YAEP,CACEyB,MAAO,eACP2B,UAAW,WACXpD,IAAK,YAEP,CACEyB,MAAO,qBACP2B,UAAW,YACXpD,IAAK,aAEP,CACEyB,MAAO,eACP2B,UAAW,OACXpD,IAAK,QAEP,CACEyB,MAAM,2BACN2B,UAAU,QACVC,OAHF,SAGSC,GACL,OAAOnD,EAAAC,EAAAC,cAAA,WAAe,WAATiD,EAAoBnD,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAAOC,OAAO,aAAaL,KAAK,iBAAUnD,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAAOC,OAAO,QAAQL,KAAK,oBAG1G,CACE7B,MAAO,2BACP2B,UAAW,aACXpD,IAAK,aACLqD,OAJF,SAISC,GACL,OAAOnD,EAAAC,EAAAC,cAAA,YAAOuD,EAAON,GAAMO,OAAO,uBAGtC,CACEpC,MAAO,eACPzB,IAAK,YACLqD,OAHF,SAGSC,EAAMQ,GACX,IAAIC,EAAO,CACTnE,SAAU,8BACVN,MAAOwE,GAET,OAAQ3D,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAMC,GAAIuC,GAAV,mBAId,OACE5D,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC2D,EAAA,EAAD,CAAYC,MAAO,CAAEC,OAAQ,eAC3B/D,EAAAC,EAAAC,cAAC2D,EAAA,EAAW1C,KAAZ,qBACAnB,EAAAC,EAAAC,cAAC2D,EAAA,EAAW1C,KAAZ,kCAGFnB,EAAAC,EAAAC,cAAC8D,EAAA,EAAD,CAAOhB,QAASA,EAASiB,WAAYrF,KAAKO,MAAM8C,KAAMiC,OAAO,SACtDhC,WAAYtD,KAAKO,MAAM+C,WAAYmB,KAAK,mBAjGpC9B,wCCHb4C,EAAWC,IAAKjD,KAwDPkD,cArDb,SAAAA,EAAY7F,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAyF,IACjB5F,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA2F,GAAAtF,KAAAH,KAAMJ,KACDW,MAAQ,CACX8C,KAAM,CACJqC,SAAU,GACVC,KAAM,GACNC,UAAW,GACXC,OAAQ,KAGRhG,EAAKD,MAAMgB,SAASL,QACtBV,EAAKU,MAAM8C,KAAOvD,OAAOgG,OAAOjG,EAAKU,MAAM8C,KAAMxD,EAAKD,MAAMgB,SAASL,QAXtDV,sEAcZkG,GACLA,EAAEC,iBACFC,QAAQC,IAAIlG,KAAKO,MAAM8C,MACvBP,EAAMqD,KAAK,0BAA2BC,KAAKC,UAAUrG,KAAKO,MAAM8C,wCAIhE,IAAMiD,EAAiB,CACrBC,SAAU,CAAEC,KAAM,GAClBC,WAAY,CAAED,KAAM,IAKtB,OACEpF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACoF,EAAA,EAAD,CAAMC,SAAU3G,KAAK4G,OAAO/E,KAAK7B,OAC/BoB,EAAAC,EAAAC,cAACiE,EAADzF,OAAAgG,OAAA,CAAUe,MAAO,gBAAUP,GACzBlF,EAAAC,EAAAC,cAACkD,EAAA,EAAD,CAAQC,KAAM,GAAIC,IAAK1E,KAAKO,MAAM8C,KAAKwC,UAEzCzE,EAAAC,EAAAC,cAACiE,EAADzF,OAAAgG,OAAA,CAAUe,MAAO,gBAAUP,GACzBlF,EAAAC,EAAAC,cAACwF,EAAA,EAAD,CAAOC,aAAc/G,KAAKO,MAAM8C,KAAKqC,YAEvCtE,EAAAC,EAAAC,cAACiE,EAADzF,OAAAgG,OAAA,CAAUe,MAAO,sBAAWP,GAC1BlF,EAAAC,EAAAC,cAACwF,EAAA,EAAD,CAAOC,aAAc/G,KAAKO,MAAM8C,KAAKuC,aAEvCxE,EAAAC,EAAAC,cAACiE,EAADzF,OAAAgG,OAAA,CAAUe,MAAO,gBAAUP,GACzBlF,EAAAC,EAAAC,cAACwF,EAAA,EAAD,CAAOC,aAAc/G,KAAKO,MAAM8C,KAAKsC,QAEvCvE,EAAAC,EAAAC,cAACiE,EAlBkB,CACvBkB,WAAY,CAAED,KAAM,EAAGQ,OAAQ,IAkBzB5F,EAAAC,EAAAC,cAAC2F,EAAA,EAAD,CAAQ7H,KAAK,UAAU8H,SAAU,UAAjC,0BA7CavE,aCyFVwE,cAxFb,SAAAA,EAAYvH,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAmH,IACjBtH,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAqH,GAAAhH,KAAAH,KAAMJ,KACDW,MAAQ,CACX8C,KAAM,GACNC,WAAY,CACVC,MAAO,EACP/C,QAAS,EACTgD,SAAU,GACVC,SAAU5D,EAAK6D,WAAW7B,KAAhB/B,OAAA6D,EAAA,EAAA7D,QAAA6D,EAAA,EAAA7D,CAAAD,OARGA,0EAaR+D,GAAS,IAAAC,EAAA7D,KACd8D,EAAM,4BAA8BF,EAAU,SAAW5D,KAAKO,MAAM+C,WAAWE,SACnFV,EAAMiB,IAAID,GAAKE,KAAK,SAACC,GACnB,IAAIZ,EAAOY,EAAIZ,KACTC,EAAaO,EAAKtD,MAAM+C,WAC9BA,EAAWC,MAAQF,EAAKa,cACxBZ,EAAW9C,QAAUoD,EACrBC,EAAK/C,SAAS,CACZuC,KAAMA,EAAKc,QACXb,6DAMJtD,KAAK0D,WAAW1D,KAAKO,MAAM+C,WAAW9C,0CAItC,IAAM4D,EAAU,CACd,CACE1B,MAAO,qBACP2B,UAAW,SACXpD,IAAK,UAEP,CACEyB,MAAO,qBACP2B,UAAW,SACXpD,IAAK,YAEP,CACEyB,MAAM,eACN2B,UAAU,UACVpD,IAAI,WAEN,CACEyB,MAAO,2BACP2B,UAAW,KACXpD,IAAK,KACLqD,OAJF,SAISC,GACL,OAAOnD,EAAAC,EAAAC,cAAA,YAAOuD,EAAON,GAAMO,OAAO,uBAGtC,CACEpC,MAAO,2BACP2B,UAAW,UACXpD,IAAK,WAEP,CACEyB,MAAO,eACPzB,IAAK,YACLqD,OAHF,SAGSC,EAAMQ,GACX,IAAIC,EAAO,CACTnE,SAAU,8BACVN,MAAOwE,GAET,OAAQ3D,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAMC,GAAIuC,GAAV,mBAId,OACE5D,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC2D,EAAA,EAAD,CAAYC,MAAO,CAAEC,OAAQ,eAC3B/D,EAAAC,EAAAC,cAAC2D,EAAA,EAAW1C,KAAZ,qBACAnB,EAAAC,EAAAC,cAAC2D,EAAA,EAAW1C,KAAZ,kCAGFnB,EAAAC,EAAAC,cAAC8D,EAAA,EAAD,CAAOhB,QAASA,EAASiB,WAAYrF,KAAKO,MAAM8C,KAAMiC,OAAO,QACtDhC,WAAYtD,KAAKO,MAAM+C,WAAYmB,KAAK,mBAlFrC9B,aCAZyE,mLAEF,OACEhG,EAAAC,EAAAC,cAAA,+BAHkBqB,aAQlB0E,mLAEF,OACEjG,EAAAC,EAAAC,cAAA,kCAHqBqB,aAuBZ2E,mLAbX,OACElG,EAAAC,EAAAC,cAACiG,EAAA,EAAD,KACEnG,EAAAC,EAAAC,cAACkG,EAAA,EAAD,CAAOC,OAAK,EAACzC,KAAK,0BAA0B0C,UAAWN,IACvDhG,EAAAC,EAAAC,cAACkG,EAAA,EAAD,CAAOC,OAAK,EAACzC,KAAK,4BAA4B0C,UAAWtE,IACzDhC,EAAAC,EAAAC,cAACkG,EAAA,EAAD,CAAOxC,KAAK,mCAAmC0C,UAAWjC,IAC1DrE,EAAAC,EAAAC,cAACkG,EAAA,EAAD,CAAOxC,KAAK,6BAA6B0C,UAAWL,IACpDjG,EAAAC,EAAAC,cAACkG,EAAA,EAAD,CAAOxC,KAAK,0BAA0B0C,UAAWP,IACjD/F,EAAAC,EAAAC,cAACqG,EAAA,EAAD,CAAUlF,GAAG,oCATGE,aCbhBiF,EAAmCC,IAAnCD,OAAQE,EAA2BD,IAA3BC,QAASC,EAAkBF,IAAlBE,OAAQC,EAAUH,IAAVG,MAiClBC,mLA7BX,OACE7G,EAAAC,EAAAC,cAAC4G,EAAA,EAAD,KACE9G,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC6G,EAAA,EAAD,KACE/G,EAAAC,EAAAC,cAAC0G,EAAD,CAAOI,MAAO,IAAKlD,MAAO,CAAEmD,UAAW,UACrCjH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKgH,UAAU,OAAO5D,IAAK6D,MAC3BnH,EAAAC,EAAAC,cAAA,MAAI4D,MAAO,CAAEsD,MAAO,OAAQC,QAAS,WAArC,gBAEFrH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACoH,EAAD,QAGJtH,EAAAC,EAAAC,cAAC6G,EAAA,EAAD,KACE/G,EAAAC,EAAAC,cAACsG,EAAD,CAAQ1C,MAAO,CAAEyD,WAAY,SAA7B,UAEAvH,EAAAC,EAAAC,cAACwG,EAAD,CAAS5C,MAAO,CAAEyD,WAAY,OAAQxD,OAAQ,YAAayD,QAAS,cAClExH,EAAAC,EAAAC,cAACuH,EAAD,OAEFzH,EAAAC,EAAAC,cAACyG,EAAD,0BArBIpF,aCCEmG,QACW,cAA7BnI,OAAOC,SAASmI,UAEe,UAA7BpI,OAAOC,SAASmI,UAEhBpI,OAAOC,SAASmI,SAASC,MACvB,2DCZNC,IAAS3E,OAAOlD,EAAAC,EAAAC,cAAC4H,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMvF,KAAK,SAAAwF,GACjCA,EAAaC","file":"static/js/main.edd23031.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ffe9256f.svg\";","// type 1-分组 2-叶子节点\r\nconst MenuSettings = [\r\n    {\r\n        type: 1,\r\n        link: '/console/dashboard',\r\n        name: 'DashBoard',\r\n        icon: 'home',\r\n        subs: [\r\n            {\r\n                type: 2,\r\n                name: '主页',\r\n                link: '/console/dashboard/home'\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        type: 1,\r\n        icon: 'user',\r\n        name: '用户',\r\n        link: '/console/user',\r\n        subs: [\r\n            {\r\n                type: 2,\r\n                name: '用户管理',\r\n                link: '/console/user/userManager',\r\n            },\r\n            {\r\n                type: 2,\r\n                name: '好友关系',\r\n                link: '/console/user/relationship',\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        type: 1,\r\n        icon: 'message',\r\n        name: '消息',\r\n        link: '/console/msg',\r\n        subs: [\r\n            {\r\n                type: 2,\r\n                name: '消息管理',\r\n                link: '/console/msg/msgManager',\r\n            },\r\n        ],\r\n    },\r\n];\r\nexport default MenuSettings;\r\n","import MenuSettings from '../config/menu-config';\r\nimport React, {Component} from 'react';\r\nimport {Icon, Menu} from 'antd';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst SubMenu = Menu.SubMenu\r\n\r\nclass NavMenu extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        let subMenus = []\r\n        for(let i in MenuSettings) {\r\n            if(MenuSettings[i].type === 1) {\r\n                subMenus.push(MenuSettings[i].link);\r\n            }\r\n        }\r\n        this.state = {\r\n            current: '',\r\n            open:[],\r\n            subMenus: subMenus\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let curUrl = window.location.pathname;\r\n        this.setState({\r\n            current: curUrl\r\n        })\r\n        for(let i in this.state.subMenus){\r\n            if(curUrl.indexOf(this.state.subMenus[i]) >= 0){\r\n                let open = this.state.open\r\n                open.push(this.state.subMenus[i]);\r\n                this.setState({open,})\r\n            }\r\n        }\r\n    }\r\n\r\n    handleSelectedKey(item, key, selectedKeys) {\r\n        this.setState({\r\n            current: item.key,\r\n        })\r\n    }\r\n\r\n    handleOpenChanged(keys) {\r\n        this.setState({\r\n            open:keys\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Menu theme={'dark'} mode=\"inline\"\r\n                  // style={{width: 256}}\r\n                  defaultSelectedKeys={['/console/dashboard/home']}\r\n                  // defaultOpenKeys={['/console/dashboard']}\r\n                  selectedKeys={[this.state.current]}\r\n                  onSelect={this.handleSelectedKey.bind(this)}\r\n                  onOpenChange={this.handleOpenChanged.bind(this)}\r\n                  openKeys={[...this.state.open]}\r\n            >\r\n                {recMenu(MenuSettings, this)}\r\n            </Menu>\r\n        );\r\n    }\r\n}\r\n\r\nfunction recMenu(datasource, comp) {\r\n    return datasource.map((menu, i) => {\r\n        if (menu.type === 0) {\r\n            return (\r\n                <Menu.Item key={menu.link}>\r\n                    <Link to={menu.link}><Icon type={menu.icon}/><span>{menu.name}</span></Link>\r\n                </Menu.Item>);\r\n        } else if (menu.type === 1) {\r\n            return (\r\n                <SubMenu key={menu.link} title={<span><Icon type={menu.icon}/><span>{menu.name}</span></span>}\r\n\r\n                >\r\n                    {recMenu(menu.subs, comp)}\r\n                </SubMenu>\r\n            )\r\n        } else {\r\n            return (\r\n                <Menu.Item key={menu.link}>\r\n                    <Link to={menu.link}>\r\n                        <span>{menu.name}</span>\r\n                    </Link>\r\n                </Menu.Item>\r\n            )\r\n        }\r\n    })\r\n}\r\n\r\nexport default NavMenu\r\n\r\n\r\n","export default {\r\n  // baseURL: 'http://127.0.0.1/ims',\r\n  \"baseURL\":\"http://39.106.133.40/ims\",\r\n  timeout: 3000,\r\n};\r\n","import axios from 'axios'\r\nimport config from '../config/settings'\r\n\r\nconst instance = axios.create()\r\ninstance.defaults.timeout =  config.timeout\r\ninstance.defaults.baseURL = config.baseURL\r\n\r\nexport default instance\r\n\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Avatar, Breadcrumb, Table, Badge } from 'antd';\r\nimport './user.css';\r\nimport * as moment from 'moment';\r\nimport axios from '../../utils/request';\r\n\r\nclass User extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      pagination: {\r\n        total: 0,\r\n        current: 1,\r\n        pageSize: 10,\r\n        onChange: this.changePage.bind(this),\r\n      },\r\n    };\r\n  }\r\n\r\n  changePage(pageNum) {\r\n    let url = 'manager/user/listUser?page=' + pageNum + '&size=' + this.state.pagination.pageSize;\r\n    axios.get(url).then((res) => {\r\n      let data = res.data\r\n      const pagination = this.state.pagination;\r\n      pagination.total = data.totalElements;\r\n      pagination.current = pageNum;\r\n      this.setState({\r\n        data: data.content,\r\n        pagination,\r\n      });\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.changePage(this.state.pagination.current);\r\n  }\r\n\r\n  render() {\r\n    const columns = [\r\n      {\r\n        title: '头像',\r\n        dataIndex: 'imgUrl',\r\n        key: 'imgUrl',\r\n        render(text) {\r\n          return <Avatar size={48} src={text}/>;\r\n        },\r\n      },\r\n      {\r\n        title: '用户名',\r\n        dataIndex: 'username',\r\n        key: 'username',\r\n      },\r\n      {\r\n        title: '昵称',\r\n        dataIndex: 'nickname',\r\n        key: 'nickname',\r\n      },\r\n      {\r\n        title: '手机号',\r\n        dataIndex: 'cellphone',\r\n        key: 'cellphone',\r\n      },\r\n      {\r\n        title: '城市',\r\n        dataIndex: 'city',\r\n        key: 'city',\r\n      },\r\n      {\r\n        title:'在线状态',\r\n        dataIndex:'state',\r\n        render(text){\r\n          return <div>{text === 'ONLINE' ? <Badge status=\"processing\" text=\"在线\" /> : <Badge status=\"error\" text=\"离线\" />}</div>\r\n        }\r\n      },\r\n      {\r\n        title: '注册时间',\r\n        dataIndex: 'createtime',\r\n        key: 'createtime',\r\n        render(text) {\r\n          return <span>{moment(text).format('YYYY-MM-DD HH:mm')}</span>\r\n        }\r\n      },\r\n      {\r\n        title: '操作',\r\n        key: 'operation',\r\n        render(text, record) {\r\n          let path = {\r\n            pathname: '/console/userManager/detail',\r\n            state: record,\r\n          };\r\n          return (<Link to={path}>编辑</Link>);\r\n        },\r\n      },\r\n    ];\r\n    return (\r\n      <div>\r\n        <Breadcrumb style={{ margin: '0 0 16px 0' }}>\r\n          <Breadcrumb.Item>用户</Breadcrumb.Item>\r\n          <Breadcrumb.Item>用户管理</Breadcrumb.Item>\r\n        </Breadcrumb>\r\n\r\n        <Table columns={columns} dataSource={this.state.data} rowKey=\"userId\"\r\n               pagination={this.state.pagination} size=\"middle\"/>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default User;","import React, {Component} from 'react';\r\nimport {Avatar, Button, Form, Input} from 'antd';\r\nimport axios from '../../utils/request'\r\n\r\nconst FormItem = Form.Item;\r\n\r\nclass UserDetail extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: {\r\n        nickname: '',\r\n        city: '',\r\n        cellphone: '',\r\n        imgUrl: '',\r\n      },\r\n    };\r\n    if (this.props.location.state)\r\n      this.state.data = Object.assign(this.state.data, this.props.location.state);\r\n  }\r\n\r\n  submit(e) {\r\n    e.preventDefault();\r\n    console.log(this.state.data);\r\n    axios.post(\"manager/user/userUpdate\", JSON.stringify(this.state.data))\r\n  }\r\n\r\n  render() {\r\n    const formItemLayout = {\r\n      labelCol: { span: 2 },\r\n      wrapperCol: { span: 8 },\r\n    };\r\n    const buttonItemLayout = {\r\n      wrapperCol: { span: 8, offset: 2 },\r\n    };\r\n    return (\r\n      <div>\r\n        <Form onSubmit={this.submit.bind(this)}>\r\n          <FormItem label={'头像'} {...formItemLayout}>\r\n            <Avatar size={64} src={this.state.data.imgUrl}/>\r\n          </FormItem>\r\n          <FormItem label={'昵称'} {...formItemLayout}>\r\n            <Input defaultValue={this.state.data.nickname}/>\r\n          </FormItem>\r\n          <FormItem label={'手机号'} {...formItemLayout}>\r\n            <Input defaultValue={this.state.data.cellphone}/>\r\n          </FormItem>\r\n          <FormItem label={'城市'} {...formItemLayout}>\r\n            <Input defaultValue={this.state.data.city}/>\r\n          </FormItem>\r\n          <FormItem {...buttonItemLayout} >\r\n            <Button type=\"primary\" htmlType={'submit'}>修改</Button>\r\n          </FormItem>\r\n        </Form>\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserDetail;","import React, {Component} from 'react';\r\nimport axios from '../../utils/request';\r\nimport {Breadcrumb, Table} from 'antd';\r\nimport {Link} from 'react-router-dom';\r\nimport * as moment from 'moment';\r\n\r\nclass Msg extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      pagination: {\r\n        total: 0,\r\n        current: 1,\r\n        pageSize: 10,\r\n        onChange: this.changePage.bind(this),\r\n      },\r\n    };\r\n  }\r\n\r\n  changePage(pageNum) {\r\n    let url = 'manager/msg/listMsg?page=' + pageNum + '&size=' + this.state.pagination.pageSize;\r\n    axios.get(url).then((res) => {\r\n      let data = res.data\r\n      const pagination = this.state.pagination;\r\n      pagination.total = data.totalElements;\r\n      pagination.current = pageNum;\r\n      this.setState({\r\n        data: data.content,\r\n        pagination,\r\n      });\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.changePage(this.state.pagination.current);\r\n  }\r\n\r\n  render() {\r\n    const columns = [\r\n      {\r\n        title: '发送人',\r\n        dataIndex: 'sendId',\r\n        key: 'sender',\r\n      },\r\n      {\r\n        title: '接受人',\r\n        dataIndex: 'destId',\r\n        key: 'receiver',\r\n      },\r\n      {\r\n        title:'内容',\r\n        dataIndex:'content',\r\n        key:'content',\r\n      },\r\n      {\r\n        title: '发送时间',\r\n        dataIndex: 'ts',\r\n        key: 'ts',\r\n        render(text) {\r\n          return <span>{moment(text).format('YYYY-MM-DD HH:mm')}</span>\r\n        }\r\n      },\r\n      {\r\n        title: '消息类型',\r\n        dataIndex: 'msgType',\r\n        key: 'msgType',\r\n      },\r\n      {\r\n        title: '操作',\r\n        key: 'operation',\r\n        render(text, record) {\r\n          let path = {\r\n            pathname: '/console/listManager/detail',\r\n            state: record,\r\n          };\r\n          return (<Link to={path}>编辑</Link>);\r\n        },\r\n      },\r\n    ];\r\n    return (\r\n      <div>\r\n        <Breadcrumb style={{ margin: '0 0 16px 0' }}>\r\n          <Breadcrumb.Item>消息</Breadcrumb.Item>\r\n          <Breadcrumb.Item>消息管理</Breadcrumb.Item>\r\n        </Breadcrumb>\r\n\r\n        <Table columns={columns} dataSource={this.state.data} rowKey=\"msgId\"\r\n               pagination={this.state.pagination} size=\"middle\"/>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Msg","import React, { Component } from 'react';\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\nimport User from '../pages/user/user';\r\nimport UserDetail from '../pages/user/detail';\r\nimport Msg from '../pages/msg/msg';\r\n\r\nclass Dashboard extends Component {\r\n  render() {\r\n    return (\r\n      <div>Dashboard</div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Relationship extends Component {\r\n  render() {\r\n    return (\r\n      <div>Relationship</div>\r\n    );\r\n  }\r\n}\r\n\r\nclass ImsRoutes extends Component {\r\n  render() {\r\n    return (\r\n      <Switch>\r\n        <Route exact path='/console/dashboard/home' component={Dashboard}/>\r\n        <Route exact path='/console/user/userManager' component={User}/>\r\n        <Route path='/console/user/userManager/detail' component={UserDetail}/>\r\n        <Route path='/console/user/relationship' component={Relationship}/>\r\n        <Route path='/console/msg/msgManager' component={Msg}/>\r\n        <Redirect to='/console/dashboard/home'/>\r\n      </Switch>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ImsRoutes;\r\n\r\n","import React, {Component} from 'react';\r\nimport {BrowserRouter as Router} from 'react-router-dom';\r\nimport logo from './asserts/logo.svg';\r\nimport './App.css';\r\nimport {Layout} from 'antd';\r\nimport 'antd/dist/antd.css';\r\nimport NavMenu from './component/nav-menu';\r\nimport ImsRoutes from './component/ims-routes';\r\n\r\nconst { Header, Content, Footer, Sider } = Layout;\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div>\r\n          <Layout>\r\n            <Sider width={260} style={{ minHeight: '100vh'}}>\r\n              <div>\r\n                <img className='logo' src={logo}/>\r\n                <h2 style={{ color: '#fff', display: 'inline' }}>IMS Manager</h2>\r\n              </div>\r\n              <div>\r\n                <NavMenu/>\r\n              </div>\r\n            </Sider>\r\n            <Layout>\r\n              <Header style={{ background: '#fff' }}>Header</Header>\r\n\r\n              <Content style={{ background: '#fff', margin: '20px 16px', padding: '25px 20px' }}>\r\n                <ImsRoutes/>\r\n              </Content>\r\n              <Footer>Footer</Footer>\r\n            </Layout>\r\n          </Layout>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}