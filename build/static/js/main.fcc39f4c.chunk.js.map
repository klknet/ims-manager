{"version":3,"sources":["asserts/logo.svg","config/menu-config.js","component/nav-menu.js","config/settings.js","utils/request.js","pages/user/user.js","pages/user/detail.js","pages/msg/msg.js","component/ims-routes.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","MenuSettings","type","link","name","key","icon","subs","SubMenu","Menu","NavMenu","react_default","a","createElement","es_menu","theme","mode","defaultSelectedKeys","recMenu","datasource","map","menu","i","Item","Link","to","title","Component","settings","instance","axios","create","defaults","timeout","config","baseURL","User","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","data","pagination","total","current","pageSize","onChange","changePage","bind","assertThisInitialized","pageNum","_this2","url","get","then","res","totalElements","setState","content","columns","dataIndex","render","text","avatar","size","src","badge","status","moment","format","record","path","pathname","breadcrumb","style","margin","table","dataSource","rowKey","FormItem","Form","UserDetail","nickname","city","cellphone","imgUrl","location","assign","e","preventDefault","console","log","post","JSON","stringify","formItemLayout","labelCol","span","wrapperCol","es_form","onSubmit","submit","label","input","defaultValue","offset","es_button","htmlType","Msg","Dashboard","Relationship","ImsRoutes","Switch","Route","exact","component","Redirect","Header","Layout","Content","Footer","Sider","App","BrowserRouter","layout","minHeight","width","className","logo","color","display","nav_menu","background","padding","ims_routes","Boolean","window","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fcc39f4c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ffe9256f.svg\";","// type 0-单节点  1-分组 2-叶子节点\r\nconst MenuSettings = [\r\n  {\r\n    type: 0,\r\n    link: '/console',\r\n    name: '主页',\r\n    key: 'home',\r\n    icon: 'home',\r\n  },\r\n  {\r\n    type: 1,\r\n    icon: 'user',\r\n    name: '用户',\r\n    key: 'user',\r\n    subs: [\r\n      {\r\n        type: 2,\r\n        name: '用户管理',\r\n        key: 'userManager',\r\n        link: '/console/userManager',\r\n      },\r\n      {\r\n        type: 2,\r\n        name: '好友关系',\r\n        key: 'relationship',\r\n        link: '/console/relationship',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    type: 1,\r\n    icon: 'message',\r\n    name: '消息',\r\n    key: 'msg',\r\n    subs: [\r\n      {\r\n        type: 2,\r\n        name: '消息管理',\r\n        key: 'msgManager',\r\n        link: '/console/msgManager',\r\n      },\r\n    ],\r\n  },\r\n];\r\nexport default MenuSettings;\r\n","import MenuSettings from '../config/menu-config';\r\nimport React, { Component } from 'react';\r\nimport { Layout, Menu, Breadcrumb, Icon, Button } from 'antd';\r\nimport { Route, BrowserRouter as Router, Link, Redirect, Switch } from 'react-router-dom';\r\n\r\nconst SubMenu = Menu.SubMenu\r\n\r\nclass NavMenu extends Component {\r\n  render() {\r\n    return (\r\n      <Menu theme={'dark'} mode=\"inline\" defaultSelectedKeys={['home']}>\r\n        {recMenu(MenuSettings)}\r\n      </Menu>\r\n    );\r\n  }\r\n}\r\n\r\nfunction recMenu(datasource) {\r\n  return datasource.map((menu, i) => {\r\n    if (menu.type == 0) {\r\n      return (\r\n        <Menu.Item key={menu.key}>\r\n          <Link to={menu.link}><Icon type={menu.icon}/><span>{menu.name}</span></Link>\r\n        </Menu.Item>);\r\n    }else if(menu.type == 1) {\r\n      return (\r\n        <SubMenu key={menu.key} title={<span><Icon type={menu.icon}/><span>{menu.name}</span></span>}>\r\n          {recMenu(menu.subs)}\r\n        </SubMenu>\r\n      )\r\n    }else {\r\n      return (\r\n        <Menu.Item key={menu.key}>\r\n          <Link to={menu.link}>\r\n            <span>{menu.name}</span>\r\n          </Link>\r\n        </Menu.Item>\r\n      )\r\n    }\r\n  })\r\n}\r\n\r\nexport default NavMenu\r\n\r\n\r\n","export default {\r\n  // baseURL: 'http://127.0.0.1/ims',\r\n  \"baseURL\":\"http://39.106.133.40/ims\",\r\n  timeout: 3000,\r\n};\r\n","import axios from 'axios'\r\nimport config from '../config/settings'\r\n\r\nconst instance = axios.create()\r\ninstance.defaults.timeout =  config.timeout\r\ninstance.defaults.baseURL = config.baseURL\r\n\r\nexport default instance\r\n\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Avatar, Breadcrumb, Table, Badge } from 'antd';\r\nimport './user.css';\r\nimport * as moment from 'moment';\r\nimport axios from '../../utils/request';\r\n\r\nclass User extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      pagination: {\r\n        total: 0,\r\n        current: 1,\r\n        pageSize: 10,\r\n        onChange: this.changePage.bind(this),\r\n      },\r\n    };\r\n  }\r\n\r\n  changePage(pageNum) {\r\n    let params = {\r\n      method: 'GET',\r\n    };\r\n    let url = 'manager/user/listUser?page=' + pageNum + '&size=' + this.state.pagination.pageSize;\r\n    axios.get(url).then((res) => {\r\n      let data = res.data\r\n      const pagination = this.state.pagination;\r\n      pagination.total = data.totalElements;\r\n      pagination.current = pageNum;\r\n      this.setState({\r\n        data: data.content,\r\n        pagination,\r\n      });\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.changePage(this.state.pagination.current);\r\n  }\r\n\r\n  render() {\r\n    const columns = [\r\n      {\r\n        title: '头像',\r\n        dataIndex: 'imgUrl',\r\n        key: 'imgUrl',\r\n        render(text) {\r\n          return <Avatar size={48} src={text}/>;\r\n        },\r\n      },\r\n      {\r\n        title: '用户名',\r\n        dataIndex: 'username',\r\n        key: 'username',\r\n      },\r\n      {\r\n        title: '昵称',\r\n        dataIndex: 'nickname',\r\n        key: 'nickname',\r\n      },\r\n      {\r\n        title: '手机号',\r\n        dataIndex: 'cellphone',\r\n        key: 'cellphone',\r\n      },\r\n      {\r\n        title: '城市',\r\n        dataIndex: 'city',\r\n        key: 'city',\r\n      },\r\n      {\r\n        title:'在线状态',\r\n        dataIndex:'state',\r\n        render(text){\r\n          return <div>{text == 'ONLINE' ? <Badge status=\"processing\" text=\"在线\" /> : <Badge status=\"error\" text=\"离线\" />}</div>\r\n        }\r\n      },\r\n      {\r\n        title: '注册时间',\r\n        dataIndex: 'createtime',\r\n        key: 'createtime',\r\n        render(text) {\r\n          return <span>{moment(text).format('YYYY-MM-DD HH:mm')}</span>\r\n        }\r\n      },\r\n      {\r\n        title: '操作',\r\n        key: 'operation',\r\n        render(text, record) {\r\n          let path = {\r\n            pathname: '/console/userManager/detail',\r\n            state: record,\r\n          };\r\n          return (<Link to={path}>编辑</Link>);\r\n        },\r\n      },\r\n    ];\r\n    return (\r\n      <div>\r\n        <Breadcrumb style={{ margin: '0 0 16px 0' }}>\r\n          <Breadcrumb.Item>用户</Breadcrumb.Item>\r\n          <Breadcrumb.Item>用户管理</Breadcrumb.Item>\r\n        </Breadcrumb>\r\n\r\n        <Table columns={columns} dataSource={this.state.data} rowKey=\"userId\"\r\n               pagination={this.state.pagination} size=\"middle\"/>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default User;","import { Component } from 'react';\r\nimport { Form, Input, Button, Avatar } from 'antd';\r\nimport React from 'react';\r\nimport config from '../../config/settings';\r\nimport axios from '../../utils/request'\r\n\r\nconst FormItem = Form.Item;\r\n\r\nclass UserDetail extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: {\r\n        nickname: '',\r\n        city: '',\r\n        cellphone: '',\r\n        imgUrl: '',\r\n      },\r\n    };\r\n    if (this.props.location.state)\r\n      this.state.data = Object.assign(this.state.data, this.props.location.state);\r\n  }\r\n\r\n  submit(e) {\r\n    e.preventDefault();\r\n    console.log(this.state.data);\r\n    axios.post(\"manager/user/userUpdate\", JSON.stringify(this.state.data))\r\n  }\r\n\r\n  render() {\r\n    const formItemLayout = {\r\n      labelCol: { span: 2 },\r\n      wrapperCol: { span: 8 },\r\n    };\r\n    const buttonItemLayout = {\r\n      wrapperCol: { span: 8, offset: 2 },\r\n    };\r\n    return (\r\n      <div>\r\n        <Form onSubmit={this.submit.bind(this)}>\r\n          <FormItem label={'头像'} {...formItemLayout}>\r\n            <Avatar size={64} src={this.state.data.imgUrl}/>\r\n          </FormItem>\r\n          <FormItem label={'昵称'} {...formItemLayout}>\r\n            <Input defaultValue={this.state.data.nickname}/>\r\n          </FormItem>\r\n          <FormItem label={'手机号'} {...formItemLayout}>\r\n            <Input defaultValue={this.state.data.cellphone}/>\r\n          </FormItem>\r\n          <FormItem label={'城市'} {...formItemLayout}>\r\n            <Input defaultValue={this.state.data.city}/>\r\n          </FormItem>\r\n          <FormItem {...buttonItemLayout} >\r\n            <Button type=\"primary\" htmlType={'submit'}>修改</Button>\r\n          </FormItem>\r\n        </Form>\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserDetail;","import React, { Component } from 'react';\r\nimport axios from '../../utils/request';\r\nimport { Avatar, Breadcrumb, Table } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\nimport * as moment from 'moment';\r\n\r\nclass Msg extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      pagination: {\r\n        total: 0,\r\n        current: 1,\r\n        pageSize: 10,\r\n        onChange: this.changePage.bind(this),\r\n      },\r\n    };\r\n  }\r\n\r\n  changePage(pageNum) {\r\n    let params = {\r\n      method: 'GET',\r\n    };\r\n    let url = 'manager/msg/listMsg?page=' + pageNum + '&size=' + this.state.pagination.pageSize;\r\n    axios.get(url).then((res) => {\r\n      let data = res.data\r\n      const pagination = this.state.pagination;\r\n      pagination.total = data.totalElements;\r\n      pagination.current = pageNum;\r\n      this.setState({\r\n        data: data.content,\r\n        pagination,\r\n      });\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.changePage(this.state.pagination.current);\r\n  }\r\n\r\n  render() {\r\n    const columns = [\r\n      {\r\n        title: '发送人',\r\n        dataIndex: 'sendId',\r\n        key: 'sender',\r\n      },\r\n      {\r\n        title: '接受人',\r\n        dataIndex: 'destId',\r\n        key: 'receiver',\r\n      },\r\n      {\r\n        title:'内容',\r\n        dataIndex:'content',\r\n        key:'content',\r\n      },\r\n      {\r\n        title: '发送时间',\r\n        dataIndex: 'ts',\r\n        key: 'ts',\r\n        render(text) {\r\n          return <span>{moment(text).format('YYYY-MM-DD HH:mm')}</span>\r\n        }\r\n      },\r\n      {\r\n        title: '消息类型',\r\n        dataIndex: 'msgType',\r\n        key: 'msgType',\r\n      },\r\n      {\r\n        title: '操作',\r\n        key: 'operation',\r\n        render(text, record) {\r\n          let path = {\r\n            pathname: '/console/listManager/detail',\r\n            state: record,\r\n          };\r\n          return (<Link to={path}>编辑</Link>);\r\n        },\r\n      },\r\n    ];\r\n    return (\r\n      <div>\r\n        <Breadcrumb style={{ margin: '0 0 16px 0' }}>\r\n          <Breadcrumb.Item>消息</Breadcrumb.Item>\r\n          <Breadcrumb.Item>消息管理</Breadcrumb.Item>\r\n        </Breadcrumb>\r\n\r\n        <Table columns={columns} dataSource={this.state.data} rowKey=\"msgId\"\r\n               pagination={this.state.pagination} size=\"middle\"/>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Msg","import React, { Component } from 'react';\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\nimport User from '../pages/user/user';\r\nimport UserDetail from '../pages/user/detail';\r\nimport Msg from '../pages/msg/msg';\r\n\r\nclass Dashboard extends Component {\r\n  render() {\r\n    return (\r\n      <div>Dashboard</div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Relationship extends Component {\r\n  render() {\r\n    return (\r\n      <div>Relationship</div>\r\n    );\r\n  }\r\n}\r\n\r\nclass ImsRoutes extends Component {\r\n  render() {\r\n    return (\r\n      <Switch>\r\n        <Route exact path='/console' component={Dashboard}/>\r\n        <Route exact path='/console/userManager' component={User}/>\r\n        <Route path='/console/userManager/detail' component={UserDetail}/>\r\n        <Route path='/console/relationship' component={Relationship}/>\r\n        <Route path='/console/msgManager' component={Msg}/>\r\n        <Redirect to='/console'/>\r\n      </Switch>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ImsRoutes;\r\n\r\n","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport logo from './asserts/logo.svg';\r\nimport './App.css';\r\nimport { Layout } from 'antd';\r\nimport 'antd/dist/antd.css';\r\nimport NavMenu from './component/nav-menu';\r\nimport ImsRoutes from './component/ims-routes';\r\n\r\nconst { Header, Content, Footer, Sider } = Layout;\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div>\r\n          <Layout>\r\n            <Sider style={{ minHeight: '100vh', width: 300 }}>\r\n              <div>\r\n                <img className='logo' src={logo}/>\r\n                <h3 style={{ color: '#fff', display: 'inline' }}>IMS Manager</h3>\r\n              </div>\r\n              <div>\r\n                <NavMenu/>\r\n              </div>\r\n            </Sider>\r\n            <Layout>\r\n              <Header style={{ background: '#fff' }}>Header</Header>\r\n\r\n              <Content style={{ background: '#fff', margin: '20px 16px', padding: '25px 20px' }}>\r\n                <ImsRoutes/>\r\n              </Content>\r\n              <Footer>Footer</Footer>\r\n            </Layout>\r\n          </Layout>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}